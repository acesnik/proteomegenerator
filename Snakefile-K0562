shell.executable("/bin/bash")
shell.prefix("source ~/.bashrc; source ~/.bash_profile; ")


### Begin User Variables

# Directories
WD = "/data/poirier/AK/K0562_testing"
workdir: WD
TMP = '/scratch/poirierj'

# References
FASTA='/data/poirier/indexes/GRCh38/GRCh38.genome.fa'
DICT = '/data/poirier/indexes/GRCh38/BWAIndex/GRCh38.genome.dict'
GTF='/data/poirier/indexes/GRCh38/gencode.v20.annotation.gtf'
INDEX = '/data/poirier/indexes/GRCh38/STAR'
UNIPROT="/data/poirier/indexes/uniprot/UP000005640.fasta"

# Dependencies
STAR = '/data/poirier/bin/STAR/bin/Linux_x86_64_static/STAR' # 2.5.2a
PICARD = '/data/poirier/bin/picard-tools-1.134/picard.jar' # 1.134
SAMTOOLS = '/data/poirier/bin/samtools-1.3/samtools' # 1.3
STRINGTIE='/data/poirier/bin/stringtie-1.3.3b.Linux_x86_64/stringtie' # 1.3.3b
TD="/data/poirier/bin/TransDecoder" # 2.1
GFFREAD="/data/poirier/bin/gffread/gffread-0.9.8.Linux_x86_64" # 0.9.8
BLAST="/data/poirier/bin/ncbi-blast-2.2.31+/bin" # 2.2.31

# Samples
K0562 = 'FCH9EFLADXX-HUMbghEAACRAAPEI-225'.split()
SAMPLES = K0562
MODELS = 'merged reference'.split()

### End User Variables


snakemake.utils.makedirs(TMP)
snakemake.utils.makedirs('out/benchmarks')
snakemake.utils.makedirs('out/all-merge')


rule all:
    input: 
        expand("out/all-merge/{model}/proteome.unique.fasta",model=MODELS)

include: "pgm"

rule index:
    input: fasta=FASTA,
            gtf=GTF
    output: INDEX
    benchmark: "out/benchmarks/index.txt"
    log: "out/logs/index.txt"
    params: n="12", R="'span[hosts=1] rusage[mem=15]'", J="index", o="out/logs/index.out", eo="out/logs/index.err"
    shell: "mkdir {output} ; \
            {STAR} \
            --runThreadN {params.n} \
            --runMode genomeGenerate \
            --genomeDir {output} \
            --genomeFastaFiles {input.fasta} \
            --sjdbGTFfile {input.gtf} \
            --sjdbOverhang 100 2> {log}"

rule STAR:
    input: l1r1="/data/kentsis/RNAseq/K0562/{sample}_L1_1.fq.gz", l2r1="/data/kentsis/RNAseq/K0562/{sample}_L2_1.fq.gz", l1r2="/data/kentsis/RNAseq/K0562/{sample}_L1_2.fq.gz", l2r2="/data/kentsis/RNAseq/K0562/{sample}_L2_2.fq.gz", index=INDEX
    output: "out/{sample}.Aligned.sortedByCoord.out.bam"
    benchmark: "out/benchmarks/{sample}.align.json"
    log: "out/logs/align.txt"
    params: n="12", R="'span[hosts=1] rusage[mem=20]'", J="align", o="out/logs/align.out", eo="out/logs/align.err"
    shell: "{STAR} \
        --genomeDir {input.index} \
        --readFilesIn {input.l1r1},{input.l2r1} {input.l1r2},{input.l2r2} \
        --outFileNamePrefix out/{wildcards.sample}. \
        --outSAMattributes NH HI XS \
        --outSAMattrRGline ID:{wildcards.sample} LB:1 PL:illumina PU:1 SM:{wildcards.sample} \
        --runThreadN {params.n} \
        --outSAMtype BAM SortedByCoordinate \
        --clip3pAdapterSeq AGATCGGAAGAG \
        --readFilesCommand zcat \
        --twopassMode Basic \
        --outSAMstrandField intronMotif \
        --outFilterIntronMotifs None \
        --outReadsUnmapped None \
        --chimSegmentMin 15 \
        --chimJunctionOverhangMin 15 \
        --alignMatesGapMax 1000000 \
        --alignIntronMax 1000000 \
        --outFilterType Normal \
        --alignSJDBoverhangMin 1 \
        --alignSJoverhangMin 8 \
        --outFilterMismatchNmax 1 \
        --outSJfilterReads Unique \
        --outFilterMultimapNmax 10 2> {log}"


#snakemake --snakefile Snakefile-K0562 --cluster "bsub -J {params.J} -n {params.n} -R {params.R} -W 4:00 -o {params.o} -eo {params.eo}" --jn {rulename}.{jobid}.sj -j 50 -k --latency-wait 60 --ri -n
# --rulegraph | dot -Tpdf > dag.pdf